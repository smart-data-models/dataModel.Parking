OffStreetParking:
  description: 'Off street parking'
  properties:
    acceptedPaymentMethod:
      description: 'Enum:''ByBankTransferInAdvance, ByInvoice, Cash, CheckInAdvance, COD, DirectDebit, GoogleCheckout, PayPal, PaySwarm''. Accepted payment method(s).'
      items:
        enum:
          - ByBankTransferInAdvance
          - ByInvoice
          - Cash
          - CheckInAdvance
          - COD
          - DirectDebit
          - GoogleCheckout
          - PayPal
          - PaySwarm
        type: string
      minItems: 1
      type: array
      uniqueItems: true
      x-ngsi:
        model: https://schema.org/acceptedPaymentMethod
        type: Property
    accessModified:
      description: 'Timestamp when `vehicleEntranceCount` and `vehicleExitCount` was updated. Allowed values: ISO8601'
      type: string
      x-ngsi:
        model: https://schema.org/DateTime
        type: Property
    address:
      description: 'The mailing address'
      properties:
        addressCountry:
          description: 'Property. The country. For example, Spain. Model:''https://schema.org/addressCountry'''
          type: string
        addressLocality:
          description: 'Property. The locality in which the street address is, and which is in the region. Model:''https://schema.org/addressLocality'''
          type: string
        addressRegion:
          description: 'Property. The region in which the locality is, and which is in the country. Model:''https://schema.org/addressRegion'''
          type: string
        postOfficeBoxNumber:
          description: 'Property. The post office box number for PO box addresses. For example, 03578. Model:''https://schema.org/postOfficeBoxNumber'''
          type: string
        postalCode:
          description: 'Property. The postal code. For example, 24004. Model:''https://schema.org/https://schema.org/postalCode'''
          type: string
        streetAddress:
          description: 'Property. The street address. Model:''https://schema.org/streetAddress'''
          type: string
      type: object
      x-ngsi:
        model: https://schema.org/address
        type: Property
    aggregateRating:
      description: 'Aggregated rating for this parking site.'
      type: object
      x-ngsi:
        model: https://schema.org/aggregateRating
        type: Property
    allowedVehicleType:
      description: ' Vehicle type(s) allowed. The first element of this array _MUST_ be the principal vehicle type allowed. Free spot numbers of other allowed vehicle types might be reported under the attribute `extraSpotNumber` and through specific entities of type _ParkingGroup_. The following values defined by _VehicleTypeEnum_, [DATEX 2 version 2.3](http://d2docs.ndwcloud.nu/downloads/modelv23.html). Enum:''agriculturalVehicle, anyVehicle, bicycle, bus, car, caravan, carWithCaravan, carWithTrailer, constructionOrMaintenanceVehicle, lorry, moped, motorcycle, motorcycleWithSideCar, motorscooter, tanker, trailer, van'''
      items:
        enum:
          - agriculturalVehicle
          - anyVehicle
          - bicycle
          - bus
          - car
          - caravan
          - carWithCaravan
          - carWithTrailer
          - constructionOrMaintenanceVehicle
          - lorry
          - moped
          - motorcycle
          - motorcycleWithSideCar
          - motorscooter
          - tanker
          - trailer
          - van
        type: string
      minItems: 1
      type: array
      uniqueItems: true
      x-ngsi:
        model: http://schema.org/Text
        type: Property
    alternateName:
      description: 'An alternative name for this item'
      type: string
      x-ngsi:
        type: Property
    areaServed:
      description: 'The geographic area where a service or offered item is provided'
      type: string
      x-ngsi:
        model: https://schema.org/Text
        type: Property
    availableSpotNumber:
      description: 'The number of spots available (_including_ all  vehicle types or reserved spaces, such as those for disabled people, long term parkers and so on). This might be harder to estimate at those parking locations on which spots borders are not clearly marked by lines. Allowed values: A positive integer number, including 0. It must lower or equal than `totalSpotNumber`.'
      minimum: 0
      type: integer
      x-ngsi:
        model: http://schema.org/Number
        type: Property
    averageSpotLength:
      description: 'The average length of parking spots.'
      exclusiveMinimum: true
      minimum: 0
      type: number
      x-ngsi:
        model: http://schema.org/length
        type: Property
        units: meters
    averageSpotWidth:
      description: 'The average width of parking spots.'
      minimum: 0
      type: number
      x-ngsi:
        model: http://schema.org/width
        type: Property
        units: meters
    category:
      description: 'Parking site''s category(ies). The purpose of this field is to allow to tag, generally speaking, off street parking entities'
      items:
        enum:
          - barrierAccess
          - feeCharged
          - forCustomers
          - forDisabled
          - forElectricalCharging
          - forEmployees
          - forMembers
          - forResidents
          - forStudents
          - forVisitors
          - free
          - freeAccess
          - gateAccess
          - guarded
          - ground
          - longTerm
          - mediumTerm
          - onlyResidents
          - onlyWithPermit
          - parkingGarage
          - parkingLot
          - private
          - public
          - publicPrivate
          - shortTerm
          - staffed
          - underground
          - urbanDeterrentParking
          - other
        type: string
      minItems: 1
      type: array
      uniqueItems: true
      x-ngsi:
        type: Property
    chargeType:
      description: 'Type(s) of charge performed by the parking site. Allowed values: Some of those defined by the DATEX II version 2.3 _ ChargeTypeEnum_ enumeration. Enum:''additionalIntervalPrice, annualPayment, firstIntervalPrice, flat, free, minimum, maximum, monthlyPayment, other, seasonTicket, temporaryPrice''. Or any other application-specific'
      items:
        enum:
          - additionalIntervalPrice
          - annualPayment
          - firstIntervalPrice
          - flat
          - free
          - minimum
          - maximum
          - monthlyPayment
          - other
          - seasonTicket
          - temporaryPrice
        type: string
      minItems: 1
      type: array
      uniqueItems: true
      x-ngsi:
        type: Property
    contactPoint:
      description: 'Parking site contact point.'
      type: object
      x-ngsi:
        model: https://schema.org/contactPoint
        type: Property
    dataProvider:
      description: 'A sequence of characters identifying the provider of the harmonised data entity.'
      type: string
      x-ngsi:
        type: Property
    dateCreated:
      description: 'Entity creation timestamp. This will usually be allocated by the storage platform.'
      format: date-time
      type: string
      x-ngsi:
        type: Property
    dateModified:
      description: 'Timestamp of the last modification of the entity. This will usually be allocated by the storage platform.'
      format: date-time
      type: string
      x-ngsi:
        type: Property
    description:
      description: 'A description of this item'
      type: string
      x-ngsi:
        type: Property
    extCategory:
      description: 'External category to complement category.'
      items:
        type: string
      minItems: 1
      type: array
      uniqueItems: true
      x-ngsi:
        type: Property
    extraSpotNumber:
      description: 'The number of extra spots _available_, i.e. free. This value must aggregate free spots from all groups mentioned below: A/ Those reserved for special purposes and usually require a permit. Permit details will be found at parking group level (entity of type `ParkingGroup`). B/ Those reserved for other vehicle types different than the principal allowed vehicle type. C/ Any other group of parking spots not subject to the general condition rules conveyed by this entity.'
      minimum: 0
      type: integer
      x-ngsi:
        model: http://schema.org/Number
        type: Property
    facilities:
      description: 'Allowed values: The following defined by the _EquipmentTypeEnum_ enumeration of DATEX II version 2.3. Enum:''bikeParking, cashMachine, copyMachineOrService, defibrillator, dumpingStation, electricChargingStation, elevator, faxMachineOrService, fireHose, fireExtinguisher, fireHydrant, firstAidEquipment, freshWater, iceFreeScaffold, informationPoint, internetWireless, luggageLocker, payDesk, paymentMachine, playground, publicPhone, refuseBin, safeDeposit, shower, toilet, tollTerminal, vendingMachine, wasteDisposal'' . Any other application-specific'
      items:
        enum:
          - bikeParking
          - cashMachine
          - copyMachineOrService
          - defibrillator
          - dumpingStation
          - electricChargingStation
          - elevator
          - faxMachineOrService
          - fireHose
          - fireExtinguisher
          - fireHydrant
          - firstAidEquipment
          - freshWater
          - iceFreeScaffold
          - informationPoint
          - internetWireless
          - luggageLocker
          - payDesk
          - paymentMachine
          - playground
          - publicPhone
          - refuseBin
          - safeDeposit
          - shower
          - toilet
          - tollTerminal
          - vendingMachine
          - wasteDisposal
        type: string
      minItems: 1
      type: array
      uniqueItems: true
      x-ngsi:
        model: ""
        type: Property
    firstAvailableFloor:
      description: 'Number of the floor closest to the ground which currently has available parking spots. Allowed values: Stories are numbered between -n and n, being 0 ground floor.'
      type: integer
      x-ngsi:
        model: http://schema.org/Number
        type: Property
    fourWheelerSlots:
      description: 'Four wheeler parking spot availability status in parking site corresponding to this observation.'
      properties:
        availableSlotNumber:
          description: 'Property. Model:''https://schema.org/Number''. Number of parking spots available for use in the smart parking site corresponding to this observation. This must a positive number lower than or equal to the totalSpotNumber.'
          type: number
        occupiedSlotNumber:
          description: 'Property. Model:''https://schema.org/Number''. Number of parking spots occupied in the smart parking site corresponding to this observation. This must a positve number lower than or equal to the totalSpotNumber.'
          type: number
        totalSlotNumber:
          description: 'Property. Model:''https://schema.org/Number''. The total number of spots offered by the parking site corresponding to this observation.'
          type: number
      type: object
      x-ngsi:
        model: https://schema.org/Text
        type: Property
    highestFloor:
      description: 'For parking sites with multiple floor levels, highest floor. An integer number. 0 is ground level. Upper floors are positive numbers. Lower floors are negative ones.'
      type: integer
      x-ngsi:
        model: http://schema.org/Number
        type: Property
    id:
      anyOf: &offstreetparking_-_properties_-_owner_-_items_-_anyof
        - description: 'Property. Identifier format of any NGSI entity'
          maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - description: 'Property. Identifier format of any NGSI entity'
          format: uri
          type: string
      description: 'Unique identifier of the entity'
      x-ngsi:
        type: Property
    images:
      description: 'A URL containing a photo of this parking site'
      items:
        format: uri
        type: string
      type: array
      x-ngsi:
        model: https://schema.org/image
        type: Property
    layout:
      description: 'Parking layout. Gives more details to the `category` attribute. Allowed values: As per the _ParkingLayoutEnum_ of DATEX II version 2.3. Enum:''automatedParkingGarage, carports, covered, field, garageBoxes, multiLevel, multiStorey, nested, openSpace, rooftop, sheds, singleLevel, surface, other''. See also [OpenStreetMap](http://wiki.openstreetmap.org/wiki/Tag:amenity%3Dparking). Or any other value useful for the application and not covered above.'
      items:
        enum:
          - automatedParkingGarage
          - carports
          - covered
          - field
          - garageBoxes
          - multiLevel
          - multiStorey
          - nested
          - openSpace
          - rooftop
          - sheds
          - singleLevel
          - surface
          - other
        type: string
      minItems: 1
      type: array
      uniqueItems: true
      x-ngsi:
        model: http://schema.org/Text
        type: Property
    location:
      description: 'Geojson reference to the item. It can be Point, LineString, Polygon, MultiPoint, MultiLineString or MultiPolygon'
      oneOf:
        - description: 'Geoproperty. Geojson reference to the item. Point'
          properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                type: number
              minItems: 2
              type: array
            type:
              enum:
                - Point
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON Point'
          type: object
        - description: 'Geoproperty. Geojson reference to the item. LineString'
          properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  type: number
                minItems: 2
                type: array
              minItems: 2
              type: array
            type:
              enum:
                - LineString
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON LineString'
          type: object
        - description: 'Geoproperty. Geojson reference to the item. Polygon'
          properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 4
                type: array
              type: array
            type:
              enum:
                - Polygon
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON Polygon'
          type: object
        - description: 'Geoproperty. Geojson reference to the item. MultiPoint'
          properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  type: number
                minItems: 2
                type: array
              type: array
            type:
              enum:
                - MultiPoint
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiPoint'
          type: object
        - description: 'Geoproperty. Geojson reference to the item. MultiLineString'
          properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              type: array
            type:
              enum:
                - MultiLineString
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiLineString'
          type: object
        - description: 'Geoproperty. Geojson reference to the item. MultiLineString'
          properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 4
                  type: array
                type: array
              type: array
            type:
              enum:
                - MultiPolygon
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiPolygon'
          type: object
      x-ngsi:
        type: Geoproperty
    lowestFloor:
      description: 'For parking sites with multiple floor levels, lowest floor. Allowed values: An integer number.'
      type: integer
      x-ngsi:
        model: http://schema.org/Number
        type: Property
    maximumAllowedHeight:
      description: 'Maximum allowed height for vehicles. If there are multiple zones, it will be the minimum height of all the zones.'
      exclusiveMinimum: true
      minimum: 0
      type: number
      x-ngsi:
        model: http://schema.org/heigth
        type: Property
        units: meters
    maximumAllowedWidth:
      description: 'Maximum allowed width for vehicles. If there are multiple zones, it will be the minimum width of all the zones.'
      exclusiveMinimum: true
      minimum: 0
      type: number
      x-ngsi:
        model: http://schema.org/width
        type: Property
        units: Meters
    maximumParkingDuration:
      description: 'Maximum allowed stay at site, on a general basis, encoded as a ISO8601 duration or with any other string relevant for parking.  An empty value or when non present indicates an indefinite duration'
      type: string
      x-ngsi:
        model: http://schema.org/Text
        type: Property
    measuresPeriod:
      description: 'The measures period related to availableSpotNumber and priceRatePerMinute.'
      type: number
      x-ngsi:
        model: http://schema.org/Number
        type: Property
    measuresPeriodUnit:
      description: 'The measures period unit related to availableSpotNumber and PriceRatePerMinute.'
      type: string
      x-ngsi:
        model: http://schema.org/unitText
        type: Property
    municipalityInfo:
      description: 'Municipality information corresponding to this observation.'
      properties:
        cityId:
          description: 'Property. Model:''https://schema.org/Text''. City ID corresponding to this observation.'
          type: string
        cityName:
          description: 'Property. Model:''https://schema.org/Text''. City name corresponding to this observation'
          type: string
        district:
          description: 'Property. Model:''https://schema.org/Text''. District name corresponding to this observation.'
          type: string
        stateName:
          description: 'Property. Model:''https://schema.org/Text''. Name of the state corresponding to this observation.'
          type: string
        ulbName:
          description: 'Property. Model:''https://schema.org/Text''. Name of the Urban Local Body corresponding to this observation.'
          type: string
        wardId:
          description: 'Property. Model:''https://schema.org/Text''. Ward ID corresponding to this observation.'
          type: string
        wardName:
          description: 'Property. Model:''https://schema.org/Text''. Ward name corresponding to this observation.'
          type: string
        wardNum:
          description: 'Property. Model:''https://schema.org/Number''. Ward number corresponding to this observation.'
          type: number
        zoneId:
          description: 'Property. Model:''https://schema.org/Text''. Zone ID corresponding to this observation.'
          type: string
        zoneName:
          description: 'Property. Model:''https://schema.org/Text''. Zone name corresponding to this observation.'
          type: string
      type: object
      x-ngsi:
        model: https://schema.org/Text
        type: Property
    name:
      description: 'The name of this item.'
      type: string
      x-ngsi:
        type: Property
    observationDateTime:
      description: 'Last reported time of observation.'
      format: date-time
      type: string
      x-ngsi:
        model: https://schema.org/Text
        type: Property
    occupancy:
      description: 'Relative value of occupied spots out of the total spots.'
      maximum: 1
      minimum: 0
      type: number
      x-ngsi:
        model: http://schema.org/Number
        type: Property
    occupancyDetectionType:
      description: 'Occupancy detection method(s).  Allowed values: The following from DATEX II version 2.3 _OccupancyDetectionTypeEnum_. Enum:''balancing, manual, modelBased, none, singleSpaceDetection''. Or any other application-specific'
      items:
        enum:
          - balancing
          - manual
          - modelBased
          - none
          - singleSpaceDetection
        type: string
      minItems: 1
      type: array
      uniqueItems: true
      x-ngsi:
        model: http://schema.org/Text
        type: Property
    occupancyModified:
      description: 'Relative value of occupied spots out of the total spots. Allowed values: 0 - 1'
      format: date-time
      type: string
      x-ngsi:
        model: http://schema.org/Number
        type: Property
    occupiedSpotNumber:
      description: 'Number of total parking spots occupied in the smart parking site corresponding to this observation. This must a positive number lower than or equal to the totalSpotNumber'
      minimum: 0
      type: integer
      x-ngsi:
        model: http://schema.org/Number
        type: Property
    openingHours:
      description: 'Opening hours of the parking site.'
      type: string
      x-ngsi:
        model: http://schema.org/openingHours
        type: Property
    outOfServiceSlotNumber:
      description: 'The number of bike racks/bike-docking slots or parking slots that are out of order and cannot be used to hire or park a bike in the bike docking station or parking site corresponding to this observation.'
      type: number
      x-ngsi:
        model: https://schema.org/Number
        type: Property
    owner:
      description: 'A List containing a JSON encoded sequence of characters referencing the unique Ids of the owner(s)'
      items:
        anyOf: *offstreetparking_-_properties_-_owner_-_items_-_anyof
        description: 'Property. Unique identifier of the entity'
      type: array
      x-ngsi:
        type: Property
    parkingMode:
      description: 'Parking mode(s). Allowed values: Those defined by the DATEX II version 2.3 _ParkingModeEnum_ enumeration. Enum:''echelonParking, parallelParking, perpendicularParking'''
      items:
        enum:
          - echelonParking
          - parallelParking
          - perpendicularParking
        type: string
      minItems: 1
      type: array
      uniqueItems: true
      x-ngsi:
        model: http://schema.org/Text
        type: Property
    parkingSiteId:
      description: 'The unique ID of the parking site or parking lot corresponding to this observation.'
      type: string
      x-ngsi:
        model: https://schema.org/Text
        type: Property
    priceCurrency:
      description: 'Price currency of price rate per minute'
      type: string
      x-ngsi:
        model: https://schema.org/priceCurrency
        type: Property
    priceRatePerMinute:
      description: 'Price rate per minute.'
      type: number
      x-ngsi:
        model: ' https://schema.org/Number'
        type: Property
    provider:
      description: 'Parking site service provider'
      type: object
      x-ngsi:
        model: https://schema.org/provider
        type: Property
    refParkingAccess:
      anyOf:
        - maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - format: uri
          type: string
      description: 'Parking site''s access point(s).'
      x-ngsi:
        model: http://schema.org/URL
        type: Relationship
    refParkingGroup:
      anyOf:
        - maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - format: uri
          type: string
      description: 'Parking site identified group(s). A group can correspond to a zone, a complete storey, a group of spots, etc.'
      x-ngsi:
        model: http://schema.org/URL
        type: Relationship
    refParkingSpot:
      anyOf:
        - maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - format: uri
          type: string
      description: 'Individual parking spots belonging to this offStreet parking site.'
      x-ngsi:
        type: Relationship
    requiredPermit:
      description: 'This attribute captures what permit(s) might be needed to park at this site. Semantics is that at least _one of_ these permits is needed to park. When a permit is composed by more than one item (and) they can be combined with a '',''. For instance ''residentPermit,disabledPermit'' stays that both, at the same time, a resident and a disabled permit are needed to park. If the list is empty no permit is needed. Allowed values: The following, defined by the _PermitTypeEnum_ enumeration of DATEX II version 2.3. Enum:''employeePermit, fairPermit, governmentPermit, noPermitNeeded, residentPermit, specificIdentifiedVehiclePermit, studentPermit, visitorPermit''. Or any other application-specific'
      items:
        enum:
          - employeePermit
          - fairPermit
          - governmentPermit
          - noPermitNeeded
          - residentPermit
          - specificIdentifiedVehiclePermit
          - studentPermit
          - visitorPermit
        type: string
      minItems: 0
      type: array
      uniqueItems: true
      x-ngsi:
        type: Property
    reservationType:
      description: 'he following specified by _ReservationTypeEnum_ of DATEX II version 2.3. Enum:''mandatory, notAvailable, optional, partly'''
      items:
        enum:
          - mandatory
          - notAvailable
          - optional
          - partly
        type: string
      minItems: 1
      type: array
      uniqueItems: true
      x-ngsi:
        model: http://schema.org/Text
        type: Property
    security:
      description: 'Security aspects provided by this parking site. Allowed values: The following, some of them, defined by _ParkingSecurityEnum_ of DATEX II version 2.3. Enum:''areaSeparatedFromSurroundings, cctv, dog, externalSecurity, fences, floodLight, guard24hours, lighting, patrolled, securityStaff'' . or any other application-specific'
      items:
        enum:
          - areaSeparatedFromSurroundings
          - cctv
          - dog
          - externalSecurity
          - fences
          - floodLight
          - guard24hours
          - lighting
          - patrolled
          - securityStaff
        type: string
      minItems: 1
      type: array
      uniqueItems: true
      x-ngsi:
        model: http://schema.org/Text
        type: Property
    seeAlso:
      description: 'list of uri pointing to additional resources about the item'
      oneOf:
        - items:
            format: uri
            type: string
          minItems: 1
          type: array
        - format: uri
          type: string
      x-ngsi:
        type: Property
    source:
      description: 'A sequence of characters giving the original source of the entity data as a URL. Recommended to be the fully qualified domain name of the source provider, or the URL to the source object.'
      type: string
      x-ngsi:
        type: Property
    specialLocation:
      description: 'If the parking site is at a special location (airport, department store, etc.) it conveys what is such special location.  Allowed values: Those defined by _ParkingSpecialLocationEnum_ of [DATEX II version 2.3](http://www.datex2.eu/content/parking-publications-extension-v10a). Enum:''airportTerminal, cableCarStation, campground, cinema, coachStation, conventionCentre, exhibitionCentre, ferryTerminal, hotel, market, publicTransportStation, religiousCentre, shoppingCentre, skilift, specificFacility, themePark, trainStation, vehicleOnRailTerminal, other'''
      items:
        enum:
          - airportTerminal
          - cableCarStation
          - campground
          - cinema
          - coachStation
          - conventionCentre
          - exhibitionCentre
          - ferryTerminal
          - hotel
          - market
          - publicTransportStation
          - religiousCentre
          - shoppingCentre
          - skilift
          - specificFacility
          - themePark
          - trainStation
          - vehicleOnRailTerminal
          - other
        type: string
      minItems: 1
      type: array
      uniqueItems: true
      x-ngsi:
        model: http://schema.org/Text
        type: Property
    status:
      description: 'Status of the parking site. Allowed values: The following defined by the following enumerations defined by DATEX II version 2.3. Enum:''almostFull, closed, closedAbnormal, full, fullAtEntrance, open, openingTimesInForce, spacesAvailable''. Or any other application-specific'
      items:
        enum:
          - almostFull
          - closed
          - closedAbnormal
          - full
          - fullAtEntrance
          - open
          - openingTimesInForce
          - spacesAvailable
        type: string
      minItems: 1
      type: array
      uniqueItems: true
      x-ngsi:
        model: http://schema.org/Text
        type: Property
    totalSpotNumber:
      description: 'The total number of spots offered by this parking site.  This number can be difficult to be obtained for those parking locations on which spots are not clearly marked by lines. Allowed values: Any positive integer number or 0. Normative references: DATEX 2 version 2.3 attribute _parkingNumberOfSpaces_ of the _ParkingRecord_ class.'
      minimum: 1
      type: integer
      x-ngsi:
        model: http://schema.org/Number
        type: Property
    twoWheelerSlots:
      description: 'Two wheeler parking spot availability status in parking site corresponding to this observation.'
      properties:
        availableSpotNumber:
          description: 'Property. Model:''https://schema.org/Number''. Number of parking spots available for use in the smart parking site corresponding to this observation. This must a positve number lower than or equal to the totalSpotNumber.'
          type: number
        occupiedSpotNumber:
          description: 'Property. Model:''https://schema.org/Number''. Number of parking spots occupied in the smart parking site corresponding to this observation. This must a positve number lower than or equal to the totalSpotNumber.'
          type: number
        totalSpotNumber:
          description: 'Property. Model:''https://schema.org/Number''. The total number of spots offered by the parking site corresponding to this observation.'
          type: number
      type: object
      x-ngsi:
        model: https://schema.org/Text
        type: Property
    type:
      description: 'It has to be OffStreetParking'
      enum:
        - OffStreetParking
      type: string
      x-ngsi:
        type: Property
    unclassifiedSlots:
      description: 'Unclassified vehicles or other vehicles parking spot availability status in parking site corresponding to this observation.'
      properties:
        availableSpotNumber:
          description: 'Property. Model:''https://schema.org/Number''. Number of parking spots available for use in the smart parking site corresponding to this observation. This must a positve number lower than or equal to the totalSpotNumber.'
          type: number
        occupiedSpotNumber:
          description: 'Property. Model:''https://schema.org/Number''. Number of parking spots occupied in the smart parking site corresponding to this observation. This must a positve number lower than or equal to the totalSpotNumber.'
          type: number
        totalSpotNumber:
          description: 'Property. Model:''https://schema.org/Number''. The total number of spots offered by the parking site corresponding to this observation.'
          type: number
      type: object
      x-ngsi:
        model: https://schema.org/Text
        type: Property
    usageScenario:
      description: 'Usage scenario(s). Gives more details to the `category` attribute. Allowed values: Those defined by the enumeration _ParkingUsageScenarioEnum_ of DATEX II version 2.3. Enum:''automaticParkingGuidance, carSharing, dropOffWithValet, dropOffMechanical, dropOff, eventParking, kissAndRide, liftShare, loadingBay, overnightParking, parkAndCycle, parkAndRide, parkAndWalk, restArea, serviceArea, staffGuidesToSpace, truckParking, vehicleLift, other''. Or any other value useful for the application and not covered above.'
      items:
        enum:
          - automaticParkingGuidance
          - carSharing
          - dropOffWithValet
          - dropOffMechanical
          - dropOff
          - eventParking
          - kissAndRide
          - liftShare
          - loadingBay
          - overnightParking
          - parkAndCycle
          - parkAndRide
          - parkAndWalk
          - restArea
          - serviceArea
          - staffGuidesToSpace
          - truckParking
          - vehicleLift
          - other
        type: string
      minItems: 1
      type: array
      uniqueItems: true
      x-ngsi:
        model: http://schema.org/Text
        type: Property
    vehicleEntranceCount:
      description: 'Aggregated number of vehicle that enter the parking site in a period of time.'
      minimum: 0
      type: number
      x-ngsi:
        model: http://schema.org/Number
        type: Property
    vehicleExitCount:
      description: 'Aggregated number of vehicle that leave the parking site in a period of time.'
      minimum: 0
      type: number
      x-ngsi:
        model: http://schema.org/Number
        type: Property
  required:
    - id
    - type
    - location
  type: object
  x-derived-from: ""
  x-disclaimer: 'Redistribution and use in source and binary forms, with or without modification, are permitted  provided that the license conditions are met. Copyleft (c) 2022 Contributors to Smart Data Models Program'
  x-license-url: https://github.com/smart-data-models/dataModel.Parking/blob/master/OffStreetParking/LICENSE.md
  x-model-schema: https://smart-data-models.github.io/dataModel.Parking/OffStreetParking/schema.json
  x-model-tags: IUDX
  x-version: 0.1.2
